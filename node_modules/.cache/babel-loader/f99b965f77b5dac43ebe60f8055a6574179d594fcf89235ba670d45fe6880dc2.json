{"ast":null,"code":"var _jsxFileName = \"/Users/danielt/Thinkful/flashcard-o-matic1/src/components/Card/Study.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api/index\";\nimport Breadcrumb from \"../../Layout/Breadcrumb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Study() {\n  _s();\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  const [cardNumber, setCardNumber] = useState(1);\n  const [front, isFront] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    async function fetchData() {\n      const abortController = new AbortController();\n      const response = await readDeck(deckId, abortController.signal);\n      setDeck(response);\n      setCards(response.cards);\n      return () => {\n        abortController.abort();\n      };\n    }\n    fetchData();\n  }, [deckId]);\n  function nextCard(index, total) {\n    console.log(index);\n    if (index < total) {\n      setCardNumber(cardNumber + 1);\n      isFront(true);\n    } else {\n      if (window.confirm(`Restart cards? Click 'cancel' to return to the home page`)) {\n        setCardNumber(1);\n        isFront(true);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }\n  function flipCard() {\n    if (front) {\n      isFront(false);\n    } else {\n      isFront(true);\n    }\n  }\n  function showNextButton(cards, index) {\n    if (front) {\n      return null;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextCard(index + 1, cards.length),\n        className: \"btn btn-primary mx-1\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    }\n  }\n  function enoughCards() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: cards.map((card, index) => {\n        if (index === cardNumber - 1) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-title\",\n              children: `Card ${index + 1} of ${cards.length}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-text\",\n              children: front ? card.front : card.back\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: flipCard,\n              className: \"btn btn-secondary mx-1\",\n              children: \"Flip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), showNextButton(cards, index)]\n          }, card.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n  function notEnoughCards() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Not enough cards.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You need at least 3 cards to study. There are \", cards.length, \" \", \"cards in this deck.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}/cards/new`,\n        className: \"btn btn-primary mx-1\",\n        children: \"Add Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      crumbs: [\"Home\", \"Deck\", \"Study\"],\n      currentDeck: deck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: `${deck.name}: Study`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cards.length === 0 ? notEnoughCards() : cards.length > 2 ? enoughCards() : notEnoughCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n_s(Study, \"Jh65GSSP0JN+BXSknbnHfd4OrOc=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = Study;\nexport default Study;\nvar _c;\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","useHistory","readDeck","Breadcrumb","jsxDEV","_jsxDEV","Study","_s","deckId","deck","setDeck","cards","setCards","cardNumber","setCardNumber","front","isFront","history","fetchData","abortController","AbortController","response","signal","abort","nextCard","index","total","console","log","window","confirm","push","flipCard","showNextButton","onClick","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","enoughCards","map","card","back","id","notEnoughCards","to","crumbs","currentDeck","name","_c","$RefreshReg$"],"sources":["/Users/danielt/Thinkful/flashcard-o-matic1/src/components/Card/Study.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api/index\";\nimport Breadcrumb from \"../../Layout/Breadcrumb\";\n\nfunction Study() {\n    const { deckId } = useParams();\n    const [deck, setDeck] = useState({});\n    const [cards, setCards] = useState([]);\n    const [cardNumber, setCardNumber] = useState(1);\n    const [front, isFront] = useState(true);\n    const history = useHistory();\n\n    useEffect(() => {\n        async function fetchData() {\n            const abortController = new AbortController();\n            const response = await readDeck(deckId, abortController.signal);\n            setDeck(response);\n            setCards(response.cards);\n            return () => {\n                abortController.abort();\n            };\n        }\n        fetchData();\n    }, [deckId]);\n\n    function nextCard(index, total) {\n        console.log(index);\n        if (index < total) {\n            setCardNumber(cardNumber + 1);\n            isFront(true);\n        } else {\n            if (\n                window.confirm(\n                    `Restart cards? Click 'cancel' to return to the home page`\n                )\n            ) {\n                setCardNumber(1);\n                isFront(true);\n            } else {\n                history.push(\"/\");\n            }\n        }\n    }\n\n    function flipCard() {\n        if (front) {\n            isFront(false);\n        } else {\n            isFront(true);\n        }\n    }\n\n    function showNextButton(cards, index) {\n        if (front) {\n            return null;\n        } else {\n            return (\n                <button\n                    onClick={() => nextCard(index + 1, cards.length)}\n                    className=\"btn btn-primary mx-1\"\n                >\n                    Next\n                </button>\n            );\n        }\n    }\n\n    function enoughCards() {\n        return (\n            <div className=\"card\">\n                {cards.map((card, index) => {\n                    if (index === cardNumber - 1) {\n                        return (\n                            <div className=\"card-body\" key={card.id}>\n                                <div className=\"card-title\">\n                                    {`Card ${index + 1} of ${cards.length}`}\n                                </div>\n                                <div className=\"card-text\">\n                                    {front ? card.front : card.back}\n                                </div>\n                                <button\n                                    onClick={flipCard}\n                                    className=\"btn btn-secondary mx-1\"\n                                >\n                                    Flip\n                                </button>\n                                {showNextButton(cards, index)}\n                            </div>\n                        );\n                    }\n                })}\n            </div>\n        );\n    }\n\n    function notEnoughCards() {\n        return (\n            <div>\n                <h2>Not enough cards.</h2>\n                <p>\n                    You need at least 3 cards to study. There are {cards.length}{\" \"}\n                    cards in this deck.\n                </p>\n                <Link\n                    to={`/decks/${deck.id}/cards/new`}\n                    className=\"btn btn-primary mx-1\"\n                >\n                    Add Cards\n                </Link>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Breadcrumb\n            crumbs={[\"Home\", \"Deck\", \"Study\"]}\n            currentDeck={deck}\n            />\n            <div>\n                <h2>{`${deck.name}: Study`}</h2>\n                <div>\n                    {cards.length === 0\n                        ? notEnoughCards()\n                        : cards.length > 2\n                        ? enoughCards()\n                        : notEnoughCards()}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Study;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}